There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

[TODO] 分析

#+BEGIN_SRC go


func findMedianSortedArrays(nums1 []int, nums2 []int) float64 {
	l := len(nums1) + len(nums2)
	if l&1 == 0 { // l is even
		return (float64(findKthSortedArrays(nums1, nums2, l/2)) +
			float64(findKthSortedArrays(nums1, nums2, l/2+1))) / 2
	}
	return float64(findKthSortedArrays(nums1, nums2, l/2+1))

}
func findKthSortedArrays(nums1, nums2 []int, k int) int {
	l1 := len(nums1)
	l2 := len(nums2)
	if l1 > l2 { // assume l1 < l2
		return findKthSortedArrays(nums2, nums1, k)
	}
	if l1 == 0 {
		return nums2[k-1]
	}
	if k == 1 {
		if nums1[0] > nums2[0] {
			return nums2[0]
		}
		return nums1[0]
	}

	l := k
	left := l / 2
	if l/2 > l1 {
		left = l1
	}

	right := l - left
	if nums1[left-1] <= nums2[right-1] {
		return findKthSortedArrays(nums1[left:], nums2, k-left)
	} else {
		return findKthSortedArrays(nums1, nums2[right:], k-right)
	}
}





#+END_SRC
